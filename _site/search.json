[
  
    {
      "title"       : "알엘모델 소개 - RLmodel",
      "category"    : "theory",
      "tags"        : "Reinforcement Learning",
      "url"         : "./RLmodel-intro.html",
      "date"        : "2021-05-01 00:00:00 +0900",
      "description" : "RLmodel 이란: Intro.",
      "content"     : "RLmodel (Reinforcement Learning model maker)알엘모델을 다양한 강화학습,머신러닝 특히 자율주행을 테스트 할 수 있는 모바일 로봇장 플랫폼을 제공하는 업체 입니다.: SRC 는 자율주행 알고리즘 및 교육목적으로 개발 되었습니다. 10여년 간 네이버 카페를 운영하여 관련 예제나 테스트 결과등을 공유하고 있습니다. 다른 RLmodel 유투브 영상들다양한 HW 및 SW 모듈로 주행알고리즘 검증 및 센서퓨전 테스트에 적용완료 차량제어는 Python, C, 등의 컴퓨터언어와도 호환이 되도록 시리얼통신으로 제어할 수 있습니다. LabVIEW 라고하는 National Instrument 사의 프로그래밍 언어도 지원합니다.제공 제품군SRC(A,B,C,D 타입), ASV(자율운항보트), Inverted pendulum, Ball Balance robot 등이 있습니다.주요특징프레임은 전체가 알루미늄, 철 등의 금속. 일반 휴대용 보조배터리 파워로 일반 USB 충전이 가능하여 편리하며. 통 고무 타이어로 구성되어 펑크날 위험이 없습니다. (source), 구조와 강성이 상당히 개량되어 전체적인 안정성은 일반 플라스틱 RC 카에 비할 수 없고, 현재 수십 km 실외 운행으로 내구성 검증도 완료:개발시간 전체 약 10여년. 최종 전체 금속기반의 구조는 2019년 완성강화학습 적용 플랫폼모든 RLmodel 로봇들은 강화학습을 적용하고 테스트 해볼 수 있는 목적으로 개발이 시작되었으며 현재도 다양한 접근으로 예제들을 검토 중입니다.SW 모듈자율주행 모바일 로봇에 적용할 수 있는 Window OS 산에 LabVIEW 언어로 개발된 RLrobotics 가 있습니다.야간주행 테스트를 위한 LED light추가적으로 ROS 환경에 적합하도록 패키지도 개발 중 입니다."
    } ,
  
    {
      "title"       : "로봇개발 이력 / History!",
      "category"    : "opinion",
      "tags"        : "copyright, creativity, neural networks, machine learning, artificial intelligence",
      "url"         : "./RLmodel-history.html",
      "date"        : "2021-04-20 00:00:00 +0900",
      "description" : "자율주행관련 Mobile robot 개발자로써 관련 알고리즘 개발, 센서퓨전 테스트 등의 개발을 하는데 있어 크고 무거운 챠량 혹은 로봇등을 사용하는데 어려움을 많이 격게되어 휴대성이 좋고 쉽게 테스트,개발을 할수 있는 플랫폼을 만들게되었습니다.",
      "content"     : "모바일로봇 개발 History초기 중고 RC가, KINEX 블록 등으로 개발 프로토타입을 시작으로 다양한 테스트와 보완을 거처 최종 수십 km 자율주행 완료하여 SRC모델에 반영하여 현재도 진행중 입니다.자율주행 모바일 로봇개발 목적으로 개발한 플랫폼 check github repo .모바일 로봇 모델들초기에 적용되었던 다양한 개발버전 (Legacy SRC Mobile robots) 테스트 차량들[SRC history] 여러종류의 RC 차량의 개조와 테스트를 거처, 모든 구성 부품들이 완전히 개조되고 보완되어 업그레이드 되어 개발되었습니다..SRC 로봇은 약 소형 RC자동차 버전부터, 다양한 부품들 모터드라이버, 아두이노, 라즈베리파이, 카메라, 라이다 등을 부착하여 튜닝을 후에, 현재의 완벽한 자율주행 로봇으로 업그레이드 되게 되었습니다.알루미늄 바디 프레임[Metal frame] 전체 메탈 프레임 초기 모델중 하나.다양한 프레임 소재 및 차량 종류의 테스트를 거처 최종으로 전체 메탈프레임 구조를 갖추고 완성이 되게 되어 매우 강한 강성과 함께 파손우려가 없고 수리, 보완에도 용이하도록 개발이 완료되었습니다.자율주행 세미나 진행[SRC history] 수많은 자율주행 교육 및 세미나등을 진행하면서 요청사항들을 반영.다양한 AGV 모바일 로봇등을 개발 및 테스트 하여 최종적으로 최적화된 구조와 SW로직을 SRC 반영하여 제작 및 테스트 완료.자율주행 적용 AGV 모델들[SRC history] 다양한 종류 환경에 AGV들을 테스트 하여 SW에 반영.수십 종류의 모바일 로봇들을 테스트하고 개발한 노하우를 적용하여 효과적으로 개발 및 테스트가 가능하도록 개선되었습니다.지속적인 성능개선 및 알고리즘 확대The Next SRC 커리큘럼 및 예제와 함께 (Python, LabVIEW 등) 모바일 버전으로도 준비중에 있습니다. ."
    } ,
  
    {
      "title"       : "SRC 란 - Self driving RC car?",
      "category"    : "theory",
      "tags"        : "Robot, RC, GPS, Camera, Lidar",
      "url"         : "./SRC-robots.html",
      "date"        : "2021-04-02 00:00:00 +0900",
      "description" : "SRC 모바일로봇 이란: SRC Intro.",
      "content"     : "소개/IntroSRC 은 GPS, Camera, Lidar, IMU, 등의 센서를 기반으로 자율주행 교육 및 주행알고리즘, 센서퓨전 등을 쉽고 효과적으로 개발 할 수 있는 자율주행 모바일로봇 플랫폼 입니다.: SRC 는 자율주행 알고리즘 및 교육목적으로 개발 되었습니다. 10여년 간 네이버 카페를 운영하여 관련 예제나 테스트 결과등을 공유하고 있습니다. 다른 RLmodel 유투브 영상들다양한 HW 및 SW 모듈로 주행알고리즘 검증 및 센서퓨전 테스트에 적용완료 차량제어는 Python, C, 등의 컴퓨터언어와도 호환이 되도록 시리얼통신으로 제어할 수 있습니다. LabVIEW 라고하는 National Instrument 사의 프로그래밍 언어도 지원합니다.모델구분 및 특징SRC (Self driving Remote control Car) 는 자율주행 차량의 영어 약자 이면 현재 SRC-A,B,C,D 등의 타입이 있습니다.타입별 차이는 크기, 속도, 모터토크 등으로 구분되어 나누어 집니다.개발시간 전체 약 10여년. 최종 전체 금속기반의 구조는 2019년 완성주요특징프레임은 전체가 알루미늄, 철 등의 금속. 일반 휴대용 보조배터리 파워로 일반 USB 충전이 가능하여 편리하며. 통 고무 타이어로 구성되어 펑크날 위험이 없습니다. (source), 구조와 강성이 상당히 개량되어 전체적인 안정성은 일반 플라스틱 RC 카에 비할 수 없고, 현재 수십 km 실외 운행으로 내구성 검증도 완료:개발시간 전체 약 10여년. 최종 전체 금속기반의 구조는 2019년 완성모듈/센서개별 모듈들의 구성은 맞춤형으로 제공 될 수 있으며, 기본 모터와 모터드라이버, 상위제어기(아두이노) 만으로도 제공이 되며 제어명령은 USB 을 통한 시리얼 통신으로 제어가 가능합니다..Full option 상태의 센서 및 기타 모듈 구성도튜닝/ 업그레이드동일 차량모델 (A,B,C,D) 에 속도, 토크를 2배로 향상할 수 있는 듀얼모터 (Dual moter) 옵션으로 선택이 가능하여 등판능력, 속도 등을 높힘 모델로 선택이 가능합니다.프레임 강성을 유지하기 위해 보완 패치들로 접속부분 추가 체결함모바일 로봇의 종류는 기본 SRC 차량모델에 이어 ASV 보트(선박) 모델도 있으며 교육목적의 Pendulum, Ball Balance robot 등도 있습니다.강화학습 적용 플랫폼모든 RLmodel 로봇들은 강화학습을 적용하고 테스트 해볼 수 있는 목적으로 개발이 시작되었으며 현재도 다양한 접근으로 예제들을 검토 중입니다.기타 편의사항SRC 차량은 간단한 시리얼 프로토콜 제어가 가능하고 부가 기능으로는 스피커, LED dot matrix, Light 등을 옵션으로 창작하여 테스트 시 차량의 상태나 프로그램의 동작 세부사항 확인이 쉽도록 하였습니다.야간주행 테스트를 위한 LED light추가적으로 ROS 환경에 적합하도록 패키지도 개발 중 입니다."
    } ,
  
    {
      "title"       : "ASV 란 - Autonomous Surface Vehicle",
      "category"    : "",
      "tags"        : "general blogging, thoughts, life",
      "url"         : "./ASV-robot.html",
      "date"        : "2021-03-24 00:00:00 +0900",
      "description" : "무인 자율운항 보트/선박 ASV",
      "content"     : "무인 자율운항 선박지상이나 뿐만 아니라 물 위에서 무인보트 개발을 위한 ASV, 자율운항 선박(보트) 등의 주행알고리즘 개발이나 선박주행의 센서퓨전, 기타 제어로직 연구에 적합하도록 개발되었습니다.사양: 수중모터(Thruster) 2개의 속도제어를 이용하여 방향제어 GPS, Lidar 를 활용하여 주행경로, 충돌회피 등에 적용추가옵션: 방향제어를 위한 키 추가 장착가능 사양에 맞게 배터리 옵션, 제어기 설정등 맞춤형 제작 가능SRC 와 같은 자율주행 차량보다 좀더 자유로운 제어나 운항을 테스트 해 볼 수 있으나 물 위에서 움직이는 만큼 이동궤적에 차이가 있습니다.수중모터, 방향키 등을 쉽게 추가/ 변경이 가능기본 2개의 수중모터를 사용하고 있으나 추가나 좀더 높은 사양으로 쉽게 업그레이드가 가능함ESC Calibration instruction초기에 제공되는 ESC 는 기본적으로 초기 Calibration 이 필요하며 Arduino 를 활용하여 모터의 Min/Max speed 설정을 하여 사용을 해야 합니다..인터넷상에 많은 Aruduino 기반의 ESC Calibration 소스코드를 활용 할 수 있습니다.: lobodol jeonds1127Arduino를 활용한 ESC Calibation 연결 결선도Finally it came self sailing boat 수중모터 테스트와 칼리브레이션은 무부하 상태보다 수중에서 진행하는게 바람직 합니다. 칼리브레이션 진행시 ‘삐’하는 동작음이 들리고 스케일에 따라 몇 번의 조정이 필요할 수 있습니다.주의사항(경험): 배터리 파워가 부족하면 ESC가 자동으로 동작을 중지하게 하는 경우가 있습니다. Calibration은 매번 할 필요없이 처음 1회만 하면 됩니다. Calibration 완료후 관련 Arduino 코드에는 테스트 코드도 같이 제공되니 바로 확인 가능합니다.다양한 종류의 수중모터(Thruster) 테스트그리고 ASV는 다양한 보트, 요트, 선박등의 디자일들을 고려하여 개량하고 모델을 추가할 예정입니다.자율운항 보드 대회테스트 진행이 어느 정도 되고 개발이 마무리 되면 대한조선학회에서 주최하는 ‘자율운항보드 경진대회’ 참석하는 것도 추천 드립니다."
    } ,
  
    {
      "title"       : "RL Connect - 무료 Ntrip client sw",
      "category"    : "",
      "tags"        : "GPS, Network rtk, Ntrip client, GNSS, fkp, vrs",
      "url"         : "./RLConnect.html",
      "date"        : "2021-03-19 06:14:20 +0900",
      "description" : "Free Ntrip client 'RL Connect'",
      "content"     : "RTK Real Time KinematicGPS 의 정밀도를 높이기 위한 RTK mode 중 Network RTK 기능 설정을 위해 필요한 Ntrip client 로직을 개발하여 사용하고, 별로도 독립 툴로 개발하여 배포하였습니다.[RL_Connect] Netwrok RTK 모드 설정을 위한 Ntrip client..기본적으로 RLmodel 의 자율주행 차량과 자율운항 보트에는 기본 내장된 기능일반 Ntrip client 에는 없는 모드별 분포, 비율을 계산하여 상태를 분석할 수 있도록 지원TM 좌표계로 변환 -&gt; 점들을 포함하는 최소원을 계산하여 원의 반경 계산하여 표시마운트 위치 테이블 정보 수신.FKP, VRS mount 기준국 접속 가능.접속계정 데이타 DB로 관리GPS NMEA 데이타 로거로도 적용 (위성지도 연동) Source code / GithubHTTP 1.x 프로토콜 포맷 변환참고 python 코드 깃헙 tridge/pyUblox Ntrip client 소스코드. HTTP 1.1 ver 포맷,header =\\\"GET /{} HTTP/1.1\\r\\n\".format(mountpoint) +\\\"Host \\r\\n\".format(server) +\\\"Ntrip-Version: Ntrip/2.0\\r\\n\" +\\\"User-Agent: NTRIP pyUblox/0.0\\r\\n\" +\\\"Connection: close\\r\\n\" +\\\"Authorization: Basic {}\\r\\n\\r\\n\".format(pwd)static const char encodingTable [64] = { 'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P', 'Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f', 'g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v', 'w','x','y','z','0','1','2','3','4','5','6','7','8','9','+','/'}GNSS/GP 모듈은 uBlox F9P M8P, Sententrio Mosaic X5, MBC MRP, 등에 적용하여 테스트.RL Connect Hardware Function block정밀도 분석 - GNSS accuracy test graph plot고정 지점에서 정밀도 분석을 할 경우를 참고하여 ref x1,x2,x3 원을 그래프에 표시하게 하여 현재 데이타의 상태나 품질을 확인 할 수 있음.Fully support Any GNSS/GPS module and FKP,VRS mode 다른 무료 Ntrip client 프로그램들이 제조사 판매제품만을 지원하거나 FKP/VRS 모드에 제한이 있는 것과는 차별화 해서 모두 가능하도록 지원.추가 포함기능 : GPS 모듈 2개를 동시에 연동하여 NMEA 데이타 표시 가능 위와 같은 모드로 2 지점이 있을 경우, 두 지점간의 거리와 각도를 표시 Raw RTCM 메세지를 직접 확인가능. 로그파일을 기본으로 남기도록 하여 후에 데이타 확인 가능Communication - TCP/IP, Serial Google map api 를 활용하여 실시간 위성지도 연동 Hardware를 포함한 Network 상태 모니터링 / USB Serial, TCP, RTCM 메세지기본 Base 프로그램은 LabVIEW 언어를 활용With LabVIEW implemented, FKP, VRS Mount issue기준국 접속시 FKP, VRS 모드의 경우 reconnection 기능은 추가 보완이 필요Mode 를 지속적으로 카운팅 하여 정밀도 상태 표시: 지정된 시간마다 모드의 상태를 카운팅 (N/A, Standalone, RTK float, RTK fixed) 카운팅 된 회수를 바탕으로 백분율로 계산하여 % 스케일로도 표시[tcp_block] LabVIEW TCP Function Block Diagram code.현재 지원하는 윈도우 버전 뿐만 아니라, I converting RC Connect to Linux / Ubuntu version, Linux Ubuntu 버전 변화작업도 진행예정."
    } ,
  
    {
      "title"       : "경로파일 (waypoint) / GPX route editor",
      "category"    : "",
      "tags"        : "waypoint, gpx, tm, point",
      "url"         : "./neural-waypoint-gpx.html",
      "date"        : "2021-03-13 04:32:20 +0900",
      "description" : "GPX format file editor tool.",
      "content"     : "GPX 파일처리 / GPX format file handlingSRC 기본 프로그램은 실외 자율주행 경로생성을 위한 툴로 GPX editor를 사용하고 있습니다. 위성지도 혹은 일반 지도상에 이동하려는 경로를 클릭하면 해당 지점들의 정보가 xml 포맷으로 저장되어 생성됩니다.GPX Route editorsourceGPX route editor 실행화면위도/경도 xml 데이타 추출gpx 파일에 있는 위도/경도 데이타를 읽고 TM 좌표변환 후에 실제 주행경로 로직에 반영하여 계산합니다.GPX 파일의 위도/경도 값 읽어 TM 좌표로 표시gpx 파일에서 TM 좌표 변환을 한 후에는 촘촘히 interpolation 하여 최종 실제 경로로 사용합니다.TM 좌표들의 점들을 interpolation 하여 최종경로 그래프"
    } ,
  
    {
      "title"       : "Other accessory",
      "category"    : "",
      "tags"        : "accessory, trailer, speaker, led",
      "url"         : "./accessory-parts.html",
      "date"        : "2021-03-01 03:32:20 +0900",
      "description" : "다양한 모바일 로봇 악세사리.",
      "content"     : "Robot 악세사리 옵션 / Accessory트레일러 / Trailer모바일 로봇에 장착하거나 연결해서 사용할 수 있는 다양한 악세사리를 제공하고 있습니다.SRC 관련 트레일러 (Trailer)Dot matrix 는 R,G,B 3종류의 색이 있습니다.8x32 led dot matrix 아두이노와 연결됨SRC 로봇 기본 프로그램에는 기본적을 아래와 같은 정보들을 dot matirx 를 통해 표시하게 할 수 있습니다:선택은 조이스틱 키를 통해서 선택 GNSS/GPS : waypoint 와 현재 차량과의 거리 오차 (+- xx meter) 현재 위도 경도 값 시간 현재 로봇 운행시간 IMU heading 방향 값ASV 조타 방향키ASV 보트의 방향키는 크기, 색에 따라 3가지 종류가 있습니다.:고속일때 효과가 있을 것ㄱThen we reshape the z array as a one dimensional array to use it to color the scatter plot:Log analyzerLog replay 는 실행파일로 제공되는 툴이며 기능은 아래와 같습니다.: 다중 경로파일 선택 가능 / waypoint files (TM, gpx) GPS/GNSS 모듈제조사 완 상관없이 사용 (단, NMEA format 이어야 함) 구글맵 연동하여 replay / Google map synch save and load log file"
    } ,
  
    {
      "title"       : "GPS/GNSS 모듈 비교평가 테스트 / GPS quality test",
      "category"    : "",
      "tags"        : "coding, python",
      "url"         : "./GPS-test.html",
      "date"        : "2021-02-11 04:32:20 +0900",
      "description" : "다양한 제조사의 GPS 제품들을 테스트 하여 비교평가 중.",
      "content"     : "다양한 GPS/GNSS 모둘 비교테스트현재 다양한 종류의 GPS 모듈, 환경에 따른 차이, RTK mode 안정성, 가성비에 따른 효율, 이동중 특성 등의 다양한 성능을 평가하고 모바일 로봇에 반영하고 있습니다.다양한 GPS 모듈 테스트 진행.For one of my starter quick programming tasks, I&nbsp;decided to code Conway's Game of Life, a very simple cellular automata that basically plays itself.If a cell has less than 2 neighbors, meaning contiguous alive cells, the cell will die of lonelinessIf a cell has more than 3 neighbors, it will die of overpopulationIf an empty block has exactly 3 contiguous alive neighbors, a new cell will be born in that spotIf an alive cell has 2 or 3 alive neighbors, it continues to liveConway’s rules for the Game of LifeIn the end the algorithm ended up as follows:Iterate through all the alive cells and get all of their neighborsdef get_neighbors(self, cell): neighbors = [] for x in range(-1, 2, 1): for y in range(-1, 2, 1): if not (x == 0 and y == 0): if (0 &amp;lt;= (cell[0] + x) &amp;lt;= self.size_x) and (0 &amp;lt;= (cell[1] + y) &amp;lt;= self.size_y): neighbors.append((cell[0] + x, cell[1] + y)) return neighborsMark all the neighboring blocks as having +1 neighbor each time a particular cell is encountered. This way, for each neighboring alive cell the counter of the particular block will increase, and in the end it will contain the total number of live cells which are contiguous to it.for cell in alive_neighbors: if alive_neighbors[cell] &amp;lt; 2 or alive_neighbors[cell] &gt; 3: self.alive_cells.discard(cell) elif alive_neighbors[cell] == 3: self.alive_cells.add(cell)현재까지도 다양한 GPS/GNSS 모듈들을 테스트 하여 성능,안정성,편의성 등에 대한 비교평가도 지속적으로 진행 중입니다."
    } ,
  
    {
      "title"       : "경로추종 알고리즘 / Path planning, tracking",
      "category"    : "",
      "tags"        : "local path, avoidance, dynamic window approach",
      "url"         : "./path-planning.html",
      "date"        : "2021-01-26 04:32:20 +0900",
      "description" : "경로처리 관련 처리관련 알고리즘 / Local path",
      "content"     : "Testing Path planning algorithms다양한 Path planning 알고리즘들을 테스트 하고 적용하고 있습니다.소스는 Python robotics 의 소스코드를 바탕으로 하였습니다.Dynamic Window ApproachA Dynamic Window Approach 는 실시간으로 정해진 윈도우 영역의 cost 를 계산하여 경로를 계산하고 판단하는 알고리즘.The neuron has 3 inputs and weights to calculate its output:input 1 is the X coordinate of the point,Input 2 is the y coordinate of the point,Input 3 is the bias and it is always 1Input 3 or the bias is required for lines that do not cross the origin (0,0)The Perceptron starts with weights all set to zero and learns by using 1,000 random points per each iteration.In the end, the perceptron always converges into a solution and finds with great precision the line we are looking for."
    } 
  
]
